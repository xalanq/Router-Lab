RM	:= rm -f
ifeq ($(OS),Windows_NT)
# Windows Host
# GCCPREFIX	:= mips-mti-elf-
GCCPREFIX	:= mipsel-linux-gnu-
else
GCCPREFIX	:= mipsel-linux-gnu-
# GCCPREFIX	:= mips-mti-elf-
endif
QEMU := qemu-system-mipsel
LD	:= $(GCCPREFIX)ld
CC	:= $(GCCPREFIX)g++
OBJDUMP	:= $(GCCPREFIX)objdump
MODULE	:= init
OBJDIR	:= obj
INCLUDE	:= include
SRCDIR	:= kern
LDSCRIPT	:= kern/kernel.ld
SRC	:= $(foreach sdir, $(SRCDIR), $(wildcard $(sdir)/*.S))
OBJ	:= $(patsubst $(SRCDIR)/%.S, $(OBJDIR)/%.o, $(SRC))
TARGET	:= kernel.elf
ASFLAG	:= -D__ASSEMBLY__ -EL -g -mips32 -mno-abicalls -mno-shared -ffreestanding

override ON_FPGA ?= y

ifeq ($(ON_FPGA), y)
	MACH_DEF = -DMACH_FPGA
else
   	MACH_DEF = -DMACH_QEMU
endif
ASFLAG += $(MACH_DEF)

override EN_INT ?= n
ifeq ($(EN_INT), y)
	ASFLAG += -DENABLE_INT
	EN_TLB = n
endif

override EN_TLB ?= n
ifeq ($(EN_TLB), y)
	ASFLAG += -DENABLE_TLB
endif

# -msingle-float
# JGNBFLAGS := -nostdlib -ffunction-sections -fdata-sections -fno-builtin -fno-PIC -fno-PIE -mhard-float

# ASFLAG += $(JGNBFLAGS)

CONFIG_FILE := .config_$(ON_FPGA)_$(EN_INT)_$(EN_TLB)
ROUTER_O := ../Homework/boilerplate/*.o
# obj/main.o obj/hal.o obj/protocol.o obj/checksum.o obj/lookup.o obj/forwarding.o

.PHONY: all clean show-utest

all: $(TARGET) kernel.bin kernel.s

$(CONFIG_FILE):
	@rm -f .config_*
	touch $@

$(TARGET): checkdirs $(OBJ) $(LDSCRIPT)
	$(LD) $(OBJ) $(ROUTER_O) -T$(LDSCRIPT)

$(OBJ): $(OBJDIR)/%.o : $(SRCDIR)/%.S $(CONFIG_FILE)
	$(CC) -o $@ $< -c -I$(INCLUDE) $(ASFLAG)


checkdirs: $(OBJDIR)

$(OBJDIR):
	test -d $@ || mkdir $@

kernel.bin: $(TARGET)
	@$(GCCPREFIX)objcopy -j .text -j .text.* -j .rodata -j .rdata -j .data -O binary -v $< kernel.bin

show-utest: $(TARGET)
	@$(GCCPREFIX)objdump -D $< | grep "^[0-9a-f]\{8\} <UTEST_" | grep -n --color=auto 'UTEST_'

.PHONY: commits-num show-utest sim clean

sim: $(TARGET)
	$(QEMU) -M mipssim -m 8M -kernel $< -vnc :0 -serial tcp::6666,server -s

commits-num:
	@git log --pretty=format:"commit %H" | grep -c 'commit'

kernel.s: kernel.bin 
	$(OBJDUMP) kernel.bin -D -b binary -m mips >kernel.s

clean:
	-$(RM) -r $(OBJDIR)
